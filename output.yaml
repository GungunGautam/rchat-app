---
# Source: flask-postgres/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flask-postgres
  labels:
    app.kubernetes.io/name: flask-postgres
    app.kubernetes.io/instance: flask-postgres
    app.kubernetes.io/version: 1.0
    app.kubernetes.io/managed-by: Helm
---
# Source: flask-postgres/templates/postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    helm.sh/chart: "flask-postgres-0.1.0"
    app.kubernetes.io/name: "flask-postgres"
    app.kubernetes.io/instance: "flask-postgres"
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: "Helm"
spec:
  type: ClusterIP
  selector:
    app: "postgres"
  ports:
    - port: 5432
      targetPort: 5432
---
# Source: flask-postgres/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  labels:
    helm.sh/chart: "flask-postgres-0.1.0"
    app.kubernetes.io/name: "flask-postgres"
    app.kubernetes.io/instance: "flask-postgres"
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: "Helm"
spec:
  type: ClusterIP
  selector:
    app: "flask-postgres"
  ports:
    - port: 80
      targetPort: 5000
---
# Source: flask-postgres/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "flask-postgres"
  labels:
    helm.sh/chart: "flask-postgres-0.1.0"
    app.kubernetes.io/name: "flask-postgres"
    app.kubernetes.io/instance: "flask-postgres"
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: "Helm"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "flask-postgres"
  template:
    metadata:
      labels:
        app: "flask-postgres"
    spec:
      serviceAccountName: "flask-postgres"
      containers:
        - name: flask-container
          image: "gungungautam/rchat-app"
          ports:
            - containerPort: 5000
          env:
            - name: DATABASE_HOST
              value: "postgres"
            - name: DATABASE_USER
              value: "flask_user"
            - name: DATABASE_PASSWORD
              value: "flask_pass"
            - name: DATABASE_NAME
              value: "flask_db"
---
# Source: flask-postgres/templates/postgres-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "postgres"
  labels:
    helm.sh/chart: "flask-postgres-0.1.0"
    app.kubernetes.io/name: "flask-postgres"
    app.kubernetes.io/instance: "flask-postgres"
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "postgres"
  template:
    metadata:
      labels:
        app: "postgres"
    spec:
      containers:
        - name: postgres
          image: "postgres:15"
          env:
            - name: POSTGRES_USER
              value: "flask_user"
            - name: POSTGRES_PASSWORD
              value: "flask_pass"
            - name: POSTGRES_DB
              value: "flask_db"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          emptyDir: {}
---
# Source: flask-postgres/templates/httproute.yaml
#
---
# Source: flask-postgres/templates/ingress.yaml
#
---
# Source: flask-postgres/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "flask-postgres-test-connection"
  labels:
    helm.sh/chart: "flask-postgres-0.1.0"
    app.kubernetes.io/name: "flask-postgres"
    app.kubernetes.io/instance: "flask-postgres"
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: "Helm"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ["wget"]
      args: ["flask-postgres:5000"]
  restartPolicy: Never
